{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 0,
    "pending": 0,
    "failures": 4,
    "start": "2023-04-11T22:35:12.688Z",
    "end": "2023-04-11T22:35:57.167Z",
    "duration": 44479,
    "testsRegistered": 4,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7eab8190-c989-4c51-8fc7-3ec47e6f91e5",
      "title": "",
      "fullFile": "cypress/e2e/_requirements/04.SaveExpensesForm.cy.js",
      "file": "cypress/e2e/_requirements/04.SaveExpensesForm.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "85c807a2-1726-4196-8fc2-dc958495de6a",
          "title": "4 - Salve todas as informações do formulário no estado global",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adiciona uma despesa e verifica se a soma de despesas do header foi atualizada e os inputs voltaram ao valor inicial",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona uma despesa e verifica se a soma de despesas do header foi atualizada e os inputs voltaram ao valor inicial",
              "timedOut": null,
              "duration": 11182,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\n(0, _helperFunctions.addExpense)(expense);\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '52.28');\ncy.getByTestId(_constants.VALUE_INPUT_TEST_ID).should('have.value', '');\ncy.getByTestId(_constants.DESCRIPTION_INPUT_TEST_ID).should('have.value', '');",
              "err": {
                "message": "CypressError: Timed out retrying after 10000ms: `cy.select()` failed because it could not find a single `<option>` with value, index, or text matching: `USD`\n\nhttps://on.cypress.io/select",
                "estack": "CypressError: Timed out retrying after 10000ms: `cy.select()` failed because it could not find a single `<option>` with value, index, or text matching: `USD`\n\nhttps://on.cypress.io/select\n    at getOptions (http://localhost:3000/__cypress/runner/cypress_runner.js:136622:80)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:8592:29)\n    at retryOptions (http://localhost:3000/__cypress/runner/cypress_runner.js:136660:67)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:8592:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:152819:65)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:152244:14)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:9435:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:9379:18)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:10993:46)\nFrom Your Spec Code:\n    at fillExpenseForm (webpack:///./cypress/utils/helperFunctions.js:14:41)\n    at addExpense (webpack:///./cypress/utils/helperFunctions.js:36:2)\n    at Context.eval (webpack:///./cypress/e2e/_requirements/04.SaveExpensesForm.cy.js:32:15)",
                "diff": null
              },
              "uuid": "7942a3cb-9896-466f-9b68-939dcfba5133",
              "parentUUID": "85c807a2-1726-4196-8fc2-dc958495de6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adiciona uma despesa e verifica se a despesa foi salva no estado global",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona uma despesa e verifica se a despesa foi salva no estado global",
              "timedOut": null,
              "duration": 10796,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\n(0, _helperFunctions.addExpense)(expense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [_objectSpread(_objectSpread({}, expense), {}, {\n  id: 0,\n  exchangeRates: _data.mockData\n})]);",
              "err": {
                "message": "CypressError: Timed out retrying after 10000ms: `cy.select()` failed because it could not find a single `<option>` with value, index, or text matching: `USD`\n\nhttps://on.cypress.io/select",
                "estack": "CypressError: Timed out retrying after 10000ms: `cy.select()` failed because it could not find a single `<option>` with value, index, or text matching: `USD`\n\nhttps://on.cypress.io/select\n    at getOptions (http://localhost:3000/__cypress/runner/cypress_runner.js:136622:80)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:8592:29)\n    at retryOptions (http://localhost:3000/__cypress/runner/cypress_runner.js:136660:67)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:8592:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:152819:65)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:152244:14)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:9435:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:9379:18)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:10993:46)\nFrom Your Spec Code:\n    at fillExpenseForm (webpack:///./cypress/utils/helperFunctions.js:14:41)\n    at addExpense (webpack:///./cypress/utils/helperFunctions.js:36:2)\n    at Context.eval (webpack:///./cypress/e2e/_requirements/04.SaveExpensesForm.cy.js:49:15)",
                "diff": null
              },
              "uuid": "d14b6176-cb65-4eb6-b7e8-d27820375caf",
              "parentUUID": "85c807a2-1726-4196-8fc2-dc958495de6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a API é chamada a cada vez que o botão 'Adicionar despesa' é clicado",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Verifica se a API é chamada a cada vez que o botão 'Adicionar despesa' é clicado",
              "timedOut": null,
              "duration": 10585,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\ncy.get('@mockFetch').should('be.calledOnce');\n(0, _helperFunctions.addExpense)(expense);\ncy.get('@mockFetch').should('be.calledTwice');\n(0, _helperFunctions.addExpense)(expense);\ncy.get('@mockFetch').should('be.calledThrice');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: expected mockFetch to have been called exactly once, but it was never called",
                "estack": "AssertionError: Timed out retrying after 10000ms: expected mockFetch to have been called exactly once, but it was never called\n    at Context.eval (webpack:///./cypress/e2e/_requirements/04.SaveExpensesForm.cy.js:71:25)",
                "diff": null
              },
              "uuid": "2a3b9263-c0d5-41d5-91fc-ff20909a2371",
              "parentUUID": "85c807a2-1726-4196-8fc2-dc958495de6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adiciona duas despesas e verifica se o estado global e header foram atualizados",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona duas despesas e verifica se o estado global e header foram atualizados",
              "timedOut": null,
              "duration": 10782,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const firstExpense = {\n  id: 0,\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares',\n  exchangeRates: _data.mockData\n};\n(0, _helperFunctions.addExpense)(firstExpense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [firstExpense]);\nconst secondExpense = {\n  id: 1,\n  value: '20',\n  currency: 'EUR',\n  method: 'Cartão de débito',\n  tag: 'Trabalho',\n  description: 'Vinte euros',\n  exchangeRates: _data.mockData\n};\n(0, _helperFunctions.addExpense)(secondExpense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [firstExpense, secondExpense]);\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '154.82');",
              "err": {
                "message": "CypressError: Timed out retrying after 10000ms: `cy.select()` failed because it could not find a single `<option>` with value, index, or text matching: `USD`\n\nhttps://on.cypress.io/select",
                "estack": "CypressError: Timed out retrying after 10000ms: `cy.select()` failed because it could not find a single `<option>` with value, index, or text matching: `USD`\n\nhttps://on.cypress.io/select\n    at getOptions (http://localhost:3000/__cypress/runner/cypress_runner.js:136622:80)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:8592:29)\n    at retryOptions (http://localhost:3000/__cypress/runner/cypress_runner.js:136660:67)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:8592:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:152819:65)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:152244:14)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:9435:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:9379:18)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:10993:46)\nFrom Your Spec Code:\n    at fillExpenseForm (webpack:///./cypress/utils/helperFunctions.js:14:41)\n    at addExpense (webpack:///./cypress/utils/helperFunctions.js:36:2)\n    at Context.eval (webpack:///./cypress/e2e/_requirements/04.SaveExpensesForm.cy.js:93:15)",
                "diff": null
              },
              "uuid": "9f51c2b1-6056-40d0-adb2-77fb103a6518",
              "parentUUID": "85c807a2-1726-4196-8fc2-dc958495de6a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7942a3cb-9896-466f-9b68-939dcfba5133",
            "d14b6176-cb65-4eb6-b7e8-d27820375caf",
            "2a3b9263-c0d5-41d5-91fc-ff20909a2371",
            "9f51c2b1-6056-40d0-adb2-77fb103a6518"
          ],
          "pending": [],
          "skipped": [],
          "duration": 43345,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}