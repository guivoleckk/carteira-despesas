{
  "stats": {
    "suites": 10,
    "tests": 34,
    "passes": 19,
    "pending": 0,
    "failures": 15,
    "start": "2023-04-12T01:02:18.650Z",
    "end": "2023-04-12T01:04:07.018Z",
    "duration": 108368,
    "testsRegistered": 34,
    "passPercent": 55.88235294117647,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "57d76bbb-ebf5-4ceb-a909-d014b0001a04",
      "title": "",
      "fullFile": "cypress/e2e/_requirements/00.RunAll.cy.js",
      "file": "cypress/e2e/_requirements/00.RunAll.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45684c32-61b6-4a32-81d0-fe1a88abd352",
          "title": "1 - Crie uma página inicial de login com os seguintes campos e características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A rota para esta página deve ser '/'",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: A rota para esta página deve ser '/'",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.location('pathname').should('eq', '/');",
              "err": {},
              "uuid": "9047f04e-9586-4edb-9ffb-1a3880e1f828",
              "parentUUID": "45684c32-61b6-4a32-81d0-fe1a88abd352",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um local para que o usuário insira seu email e senha",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: Crie um local para que o usuário insira seu email e senha",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).should('exist');\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).should('exist');",
              "err": {},
              "uuid": "971775f3-6636-4ec3-8ebd-5c93f7aa1abb",
              "parentUUID": "45684c32-61b6-4a32-81d0-fe1a88abd352",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um botão com o texto 'Entrar'",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: Crie um botão com o texto 'Entrar'",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(/Entrar/i).should('exist');",
              "err": {},
              "uuid": "5bc3021b-1ad7-4564-84a0-bb0bfafdcb98",
              "parentUUID": "45684c32-61b6-4a32-81d0-fe1a88abd352",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realize as seguintes verificações nos campos de email, senha e botão:",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: Realize as seguintes verificações nos campos de email, senha e botão:",
              "timedOut": null,
              "duration": 2595,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).type(_constants.INVALID_EMAIL_0);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.INVALID_EMAIL_1);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.INVALID_EMAIL_2);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.INVALID_EMAIL_3);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.VALID_EMAIL);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.INVALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.VALID_EMAIL);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('not.be.disabled');",
              "err": {},
              "uuid": "fedc3002-6646-4353-9d87-09a87d585a74",
              "parentUUID": "45684c32-61b6-4a32-81d0-fe1a88abd352",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Salve o email no estado da aplicação, com a chave email, assim que o usuário logar.",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: Salve o email no estado da aplicação, com a chave email, assim que o usuário logar.",
              "timedOut": null,
              "duration": 590,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helperFunctions.logInWithValidCredentials)();\ncy.window().its('store').invoke('getState').its('user.email').should('eq', _constants.VALID_EMAIL);",
              "err": {},
              "uuid": "9dad495b-582e-4565-a369-1a38913b59fa",
              "parentUUID": "45684c32-61b6-4a32-81d0-fe1a88abd352",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A rota deve ser mudada para '/carteira' após o clique no botão.",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: A rota deve ser mudada para '/carteira' após o clique no botão.",
              "timedOut": null,
              "duration": 574,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helperFunctions.logInWithValidCredentials)();\ncy.location('pathname').should('eq', '/carteira');",
              "err": {},
              "uuid": "4af2cbc6-654f-404c-b0bc-e2f52bda2530",
              "parentUUID": "45684c32-61b6-4a32-81d0-fe1a88abd352",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9047f04e-9586-4edb-9ffb-1a3880e1f828",
            "971775f3-6636-4ec3-8ebd-5c93f7aa1abb",
            "5bc3021b-1ad7-4564-84a0-bb0bfafdcb98",
            "fedc3002-6646-4353-9d87-09a87d585a74",
            "9dad495b-582e-4565-a369-1a38913b59fa",
            "4af2cbc6-654f-404c-b0bc-e2f52bda2530"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4268,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "84daa833-1e3a-4592-a1a4-111ffd8ffe3d",
          "title": "2 - Crie um header para a página de carteira contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Um elemento que exiba o email do usuário que fez login.",
              "fullTitle": "2 - Crie um header para a página de carteira contendo as seguintes características: Um elemento que exiba o email do usuário que fez login.",
              "timedOut": null,
              "duration": 595,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.EMAIL_FIELD_TEST_ID).should('contain', _constants.VALID_EMAIL);",
              "err": {},
              "uuid": "be35bf92-2276-4cc3-89a8-2bec6ced0eb7",
              "parentUUID": "84daa833-1e3a-4592-a1a4-111ffd8ffe3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um campo com a despesa total gerada pela lista de gastos.",
              "fullTitle": "2 - Crie um header para a página de carteira contendo as seguintes características: Crie um campo com a despesa total gerada pela lista de gastos.",
              "timedOut": null,
              "duration": 580,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('contain', '0');",
              "err": {},
              "uuid": "1ec39885-b581-4e93-954f-2a31f84d14ef",
              "parentUUID": "84daa833-1e3a-4592-a1a4-111ffd8ffe3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um campo que mostre que qual câmbio está sendo utilizado, que será neste caso 'BRL'",
              "fullTitle": "2 - Crie um header para a página de carteira contendo as seguintes características: Crie um campo que mostre que qual câmbio está sendo utilizado, que será neste caso 'BRL'",
              "timedOut": null,
              "duration": 593,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.HEADER_CURRENCY_FIELD_TEST_ID).should('contain', 'BRL');",
              "err": {},
              "uuid": "592707eb-4e4a-4f2c-bc51-696a2f31974b",
              "parentUUID": "84daa833-1e3a-4592-a1a4-111ffd8ffe3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be35bf92-2276-4cc3-89a8-2bec6ced0eb7",
            "1ec39885-b581-4e93-954f-2a31f84d14ef",
            "592707eb-4e4a-4f2c-bc51-696a2f31974b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1768,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b698ba84-9a1c-4adf-9733-c24a3ddf519c",
          "title": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Um campo para adicionar o valor da despesa",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para adicionar o valor da despesa",
              "timedOut": null,
              "duration": 583,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.VALUE_INPUT_TEST_ID).should('exist');",
              "err": {},
              "uuid": "f74e4fe0-fbff-4b14-ad4d-d89c81683bf6",
              "parentUUID": "b698ba84-9a1c-4adf-9733-c24a3ddf519c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Um campo para adicionar a descrição da despesa",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para adicionar a descrição da despesa",
              "timedOut": null,
              "duration": 574,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.DESCRIPTION_INPUT_TEST_ID).should('exist');",
              "err": {},
              "uuid": "bd9a055b-93df-46ea-b334-b7db182b7a23",
              "parentUUID": "b698ba84-9a1c-4adf-9733-c24a3ddf519c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Um campo para selecionar em qual moeda será registrada a despesa",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para selecionar em qual moeda será registrada a despesa",
              "timedOut": null,
              "duration": 687,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.CURRENCY_INPUT_TEST_ID).find('option').should('have.length', _constants.currenciesOptions.length);\ncy.wrap(_constants.currenciesOptions).each(currency => {\n  cy.getByTestId(_constants.CURRENCY_INPUT_TEST_ID).contains('option', currency).should('exist');\n});",
              "err": {},
              "uuid": "289e42d5-c8ba-4f8e-b287-a86ed5ec81eb",
              "parentUUID": "b698ba84-9a1c-4adf-9733-c24a3ddf519c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A chave currencies no estado global deve ser um array de siglas puxadas através de uma requisição à API",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: A chave currencies no estado global deve ser um array de siglas puxadas através de uma requisição à API",
              "timedOut": null,
              "duration": 583,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@mockFetch').should('be.calledWith', 'https://economia.awesomeapi.com.br/json/all');\ncy.window().its('store').invoke('getState').its('wallet.currencies').should('deep.equal', _constants.currenciesOptions);",
              "err": {},
              "uuid": "0a0631c5-1532-429e-994d-85a5a3696146",
              "parentUUID": "b698ba84-9a1c-4adf-9733-c24a3ddf519c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Um campo para selecionar qual método de pagamento será utilizado",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para selecionar qual método de pagamento será utilizado",
              "timedOut": null,
              "duration": 594,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.METHOD_INPUT_TEST_ID).find('option').should('have.length', _constants.methodOptions.length);\ncy.wrap(_constants.methodOptions).each(method => {\n  cy.getByTestId(_constants.METHOD_INPUT_TEST_ID).contains('option', method).should('exist');\n});",
              "err": {},
              "uuid": "63bd1e2d-10bb-40bd-a718-c025c24170d7",
              "parentUUID": "b698ba84-9a1c-4adf-9733-c24a3ddf519c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Um campo para selecionar uma categoria (tag) para a despesa.",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para selecionar uma categoria (tag) para a despesa.",
              "timedOut": null,
              "duration": 621,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.TAG_INPUT_TEST_ID).find('option').should('have.length', _constants.tagOptions.length);\ncy.wrap(_constants.tagOptions).each(tag => {\n  cy.getByTestId(_constants.TAG_INPUT_TEST_ID).contains('option', tag).should('exist');\n});",
              "err": {},
              "uuid": "b7808cd8-4c00-4230-bb92-d2c241bf4bc4",
              "parentUUID": "b698ba84-9a1c-4adf-9733-c24a3ddf519c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f74e4fe0-fbff-4b14-ad4d-d89c81683bf6",
            "bd9a055b-93df-46ea-b334-b7db182b7a23",
            "289e42d5-c8ba-4f8e-b287-a86ed5ec81eb",
            "0a0631c5-1532-429e-994d-85a5a3696146",
            "63bd1e2d-10bb-40bd-a718-c025c24170d7",
            "b7808cd8-4c00-4230-bb92-d2c241bf4bc4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3642,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5454df24-ca3a-49f6-a02d-3f1253856ad9",
          "title": "4 - Salve todas as informações do formulário no estado global",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adiciona uma despesa e verifica se a soma de despesas do header foi atualizada e os inputs voltaram ao valor inicial",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona uma despesa e verifica se a soma de despesas do header foi atualizada e os inputs voltaram ao valor inicial",
              "timedOut": null,
              "duration": 1459,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\n(0, _helperFunctions.addExpense)(expense);\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '52.28');\ncy.getByTestId(_constants.VALUE_INPUT_TEST_ID).should('have.value', '');\ncy.getByTestId(_constants.DESCRIPTION_INPUT_TEST_ID).should('have.value', '');",
              "err": {},
              "uuid": "5a4298ee-361d-4718-bfb4-dec96d58fdf9",
              "parentUUID": "5454df24-ca3a-49f6-a02d-3f1253856ad9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adiciona uma despesa e verifica se a despesa foi salva no estado global",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona uma despesa e verifica se a despesa foi salva no estado global",
              "timedOut": null,
              "duration": 1455,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\n(0, _helperFunctions.addExpense)(expense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [_objectSpread(_objectSpread({}, expense), {}, {\n  id: 0,\n  exchangeRates: _data.mockData\n})]);",
              "err": {},
              "uuid": "fbd9dfed-5e3f-4d7f-929b-a48cfd600f49",
              "parentUUID": "5454df24-ca3a-49f6-a02d-3f1253856ad9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a API é chamada a cada vez que o botão 'Adicionar despesa' é clicado",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Verifica se a API é chamada a cada vez que o botão 'Adicionar despesa' é clicado",
              "timedOut": null,
              "duration": 2315,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\ncy.get('@mockFetch').should('be.calledOnce');\n(0, _helperFunctions.addExpense)(expense);\ncy.get('@mockFetch').should('be.calledTwice');\n(0, _helperFunctions.addExpense)(expense);\ncy.get('@mockFetch').should('be.calledThrice');",
              "err": {},
              "uuid": "c95855de-e882-46b7-aa28-b6ed9a47fd94",
              "parentUUID": "5454df24-ca3a-49f6-a02d-3f1253856ad9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adiciona duas despesas e verifica se o estado global e header foram atualizados",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona duas despesas e verifica se o estado global e header foram atualizados",
              "timedOut": null,
              "duration": 2350,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const firstExpense = {\n  id: 0,\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares',\n  exchangeRates: _data.mockData\n};\n(0, _helperFunctions.addExpense)(firstExpense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [firstExpense]);\nconst secondExpense = {\n  id: 1,\n  value: '20',\n  currency: 'EUR',\n  method: 'Cartão de débito',\n  tag: 'Trabalho',\n  description: 'Vinte euros',\n  exchangeRates: _data.mockData\n};\n(0, _helperFunctions.addExpense)(secondExpense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [firstExpense, secondExpense]);\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '154.82');",
              "err": {},
              "uuid": "294a6549-1643-47be-a9ff-6386cc161b70",
              "parentUUID": "5454df24-ca3a-49f6-a02d-3f1253856ad9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a4298ee-361d-4718-bfb4-dec96d58fdf9",
            "fbd9dfed-5e3f-4d7f-929b-a48cfd600f49",
            "c95855de-e882-46b7-aa28-b6ed9a47fd94",
            "294a6549-1643-47be-a9ff-6386cc161b70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7579,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9940d798-65c7-4698-8fb7-a8d415bac89c",
          "title": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cobertura de \"Statements\" total deverá ser maior ou igual a 60.",
              "fullTitle": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação Cobertura de \"Statements\" total deverá ser maior ou igual a 60.",
              "timedOut": null,
              "duration": 3610,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.statements.pct', {\n  timeout: 0\n}).should('be.gte', 60.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 60",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 60\n    at Context.eval (webpack:///./cypress/e2e/_requirements/05.TestCoverage.cy.js:5:80)",
                "diff": null
              },
              "uuid": "a6e64df2-5658-4172-8c05-3c4db58b71f8",
              "parentUUID": "9940d798-65c7-4698-8fb7-a8d415bac89c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Functions\" total deverá ser maior ou igual a 60.",
              "fullTitle": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação Cobertura de \"Functions\" total deverá ser maior ou igual a 60.",
              "timedOut": null,
              "duration": 20,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.functions.pct', {\n  timeout: 0\n}).should('be.gte', 60.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 60",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 60\n    at Context.eval (webpack:///./cypress/e2e/_requirements/05.TestCoverage.cy.js:9:79)",
                "diff": null
              },
              "uuid": "23a9dbba-0f21-4718-82b5-f6b069e66537",
              "parentUUID": "9940d798-65c7-4698-8fb7-a8d415bac89c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Branches\" total deverá ser maior ou igual a 60.",
              "fullTitle": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação Cobertura de \"Branches\" total deverá ser maior ou igual a 60.",
              "timedOut": null,
              "duration": 9,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.branches.pct', {\n  timeout: 0\n}).should('be.gte', 60.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 60",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 60\n    at Context.eval (webpack:///./cypress/e2e/_requirements/05.TestCoverage.cy.js:13:78)",
                "diff": null
              },
              "uuid": "51f787ed-6359-4e2d-aa2d-d3ddfb6cc3f0",
              "parentUUID": "9940d798-65c7-4698-8fb7-a8d415bac89c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Lines\" total deverá ser maior ou igual a 60.",
              "fullTitle": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação Cobertura de \"Lines\" total deverá ser maior ou igual a 60.",
              "timedOut": null,
              "duration": 9,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.lines.pct', {\n  timeout: 0\n}).should('be.gte', 60.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 60",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 60\n    at Context.eval (webpack:///./cypress/e2e/_requirements/05.TestCoverage.cy.js:17:75)",
                "diff": null
              },
              "uuid": "da740246-4373-4ff6-80ba-04751c45c06e",
              "parentUUID": "9940d798-65c7-4698-8fb7-a8d415bac89c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a6e64df2-5658-4172-8c05-3c4db58b71f8",
            "23a9dbba-0f21-4718-82b5-f6b069e66537",
            "51f787ed-6359-4e2d-aa2d-d3ddfb6cc3f0",
            "da740246-4373-4ff6-80ba-04751c45c06e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3648,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "748fa71e-4abf-41bf-a4ab-4365bf4dc1f4",
          "title": "6 - Desenvolva uma tabela com os gastos contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A tabela deve possuir um cabeçalho com os campos Descrição, Tag, Método de pagamento, Valor, Moeda, Câmbio utilizado, Valor convertido e Moeda de conversão",
              "fullTitle": "6 - Desenvolva uma tabela com os gastos contendo as seguintes características: A tabela deve possuir um cabeçalho com os campos Descrição, Tag, Método de pagamento, Valor, Moeda, Câmbio utilizado, Valor convertido e Moeda de conversão",
              "timedOut": null,
              "duration": 10748,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('th').should('have.length', _constants.tableHeaderList.length);\ncy.wrap(_constants.tableHeaderList).each(header => {\n  cy.get('th').contains(header);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `th`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `th`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/_requirements/06.ExpensesTable.cy.js:19:17)",
                "diff": null
              },
              "uuid": "e5c90d86-6382-438f-ad3d-5d83dfedf975",
              "parentUUID": "748fa71e-4abf-41bf-a4ab-4365bf4dc1f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e5c90d86-6382-438f-ad3d-5d83dfedf975"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10748,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "572df078-b1b4-4fee-867a-c838ebddacfb",
          "title": "7 - Implemente a lógica para que a tabela seja alimentada pelo estado da aplicação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A tabela deve ser alimentada pelo estado da aplicação, que estará disponível na chave expenses que vem do reducer wallet.",
              "fullTitle": "7 - Implemente a lógica para que a tabela seja alimentada pelo estado da aplicação A tabela deve ser alimentada pelo estado da aplicação, que estará disponível na chave expenses que vem do reducer wallet.",
              "timedOut": null,
              "duration": 12454,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const expectedTableRows = [['Dez dólares', 'Trabalho', 'Cartão de débito', '10.00', 'Dólar Americano/Real Brasileiro', '4.75', '47.53', 'Real'], ['Cinco euros', 'Lazer', 'Cartão de crédito', '5.00', 'Euro/Real Brasileiro', '5.13', '25.63', 'Real']];\ncy.get('tbody tr').should('have.length', expectedTableRows.length);\ncy.get('tbody tr').each((row, index) => {\n  cy.wrap(expectedTableRows[index]).each(expectedValue => {\n    cy.get(row).find('td').contains(expectedValue);\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `tbody tr`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `tbody tr`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/_requirements/07.ExpenseGlobalState.cy.js:24:23)",
                "diff": null
              },
              "uuid": "886d1a7f-779f-4273-8b53-8d4578350b8a",
              "parentUUID": "572df078-b1b4-4fee-867a-c838ebddacfb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "886d1a7f-779f-4273-8b53-8d4578350b8a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12454,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "23dde1ab-d19e-4aea-a89f-d090b00d283b",
          "title": "8 - Crie um botão para deletar uma despesa da tabela contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"delete-btn\"`",
              "fullTitle": "8 - Crie um botão para deletar uma despesa da tabela contendo as seguintes características: O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"delete-btn\"`",
              "timedOut": null,
              "duration": 12433,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('tbody tr').first().find('td').last().find(`button[data-testid=\"${_constants.BTN_DELETE_TEST_ID}\"]`).should('exist');\ncy.getByTestId(_constants.BTN_DELETE_TEST_ID).should('have.length', 2);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `tbody tr`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `tbody tr`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/_requirements/08.DeleteExpense.cy.js:21:7)",
                "diff": null
              },
              "uuid": "7850b003-e7cc-4e2c-a92f-9bce69e9730b",
              "parentUUID": "23dde1ab-d19e-4aea-a89f-d090b00d283b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ao ser clicado, o botão deleta a linha da tabela, alterando o estado global.",
              "fullTitle": "8 - Crie um botão para deletar uma despesa da tabela contendo as seguintes características: Ao ser clicado, o botão deleta a linha da tabela, alterando o estado global.",
              "timedOut": null,
              "duration": 12417,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const expectedTableRow = ['Cinco euros', 'Lazer', 'Cartão de crédito', '5.00', 'Euro/Real Brasileiro', '5.13', '25.63', 'Real'];\ncy.getByTestId(_constants.BTN_DELETE_TEST_ID).first().click().should('not.exist');\nconst deleteBtn = 1;\ncy.get('tbody tr td').should('have.length', expectedTableRow.length + deleteBtn);\ncy.wrap(expectedTableRow).each(expectedValue => {\n  cy.get('tbody tr td').contains(expectedValue);\n});\nconst expectedExpenses = [_objectSpread(_objectSpread({}, _constants.initialExpenses[1]), {}, {\n  id: 1,\n  exchangeRates: _data.mockData\n})];\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', expectedExpenses);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"delete-btn\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"delete-btn\"]`, but never found it.\n    at Context.eval (webpack:///./cypress/support/commands.js:27:62)",
                "diff": null
              },
              "uuid": "6fcdd005-af6b-40e2-b110-c85f3ad9edf7",
              "parentUUID": "23dde1ab-d19e-4aea-a89f-d090b00d283b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ao clicar no botão para remover uma despesa, o valor correspondente deve ser subtraído e a despesa total deve ser atualizada no header",
              "fullTitle": "8 - Crie um botão para deletar uma despesa da tabela contendo as seguintes características: Ao clicar no botão para remover uma despesa, o valor correspondente deve ser subtraído e a despesa total deve ser atualizada no header",
              "timedOut": null,
              "duration": 12422,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '73.16');\ncy.getByTestId(_constants.BTN_DELETE_TEST_ID).first().click();\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '25.63');\ncy.getByTestId(_constants.BTN_DELETE_TEST_ID).first().click();\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '0.00');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"delete-btn\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"delete-btn\"]`, but never found it.\n    at Context.eval (webpack:///./cypress/support/commands.js:27:62)",
                "diff": null
              },
              "uuid": "4a8693a2-0d4c-4bf3-b7ef-1354be1338aa",
              "parentUUID": "23dde1ab-d19e-4aea-a89f-d090b00d283b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7850b003-e7cc-4e2c-a92f-9bce69e9730b",
            "6fcdd005-af6b-40e2-b110-c85f3ad9edf7",
            "4a8693a2-0d4c-4bf3-b7ef-1354be1338aa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 37272,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f9bea74f-0068-4faa-81d9-b2dd94ce336e",
          "title": "9 - Crie um botão para editar uma despesa da tabela contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"edit-btn\"`",
              "fullTitle": "9 - Crie um botão para editar uma despesa da tabela contendo as seguintes características: O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"edit-btn\"`",
              "timedOut": null,
              "duration": 12463,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('tbody tr').first().find('td').last().find(`button[data-testid=\"${_constants.BTN_EDIT_TEST_ID}\"]`).should('exist');\ncy.getByTestId(_constants.BTN_EDIT_TEST_ID).should('have.length', 2);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `tbody tr`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `tbody tr`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/_requirements/09.EditExpense.cy.js:21:7)",
                "diff": null
              },
              "uuid": "e2e051af-63ca-4128-b6f8-ee848e274690",
              "parentUUID": "f9bea74f-0068-4faa-81d9-b2dd94ce336e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O botão habilita um formulário para editar a linha da tabela ao ser clicado, após clicar em \"Editar despesa\" a despesa é atualizada e atualiza a soma de despesas no header.",
              "fullTitle": "9 - Crie um botão para editar uma despesa da tabela contendo as seguintes características: O botão habilita um formulário para editar a linha da tabela ao ser clicado, após clicar em \"Editar despesa\" a despesa é atualizada e atualiza a soma de despesas no header.",
              "timedOut": null,
              "duration": 12499,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.BTN_EDIT_TEST_ID).first().click();\ncy.contains(/Adicionar despesa/i).should('not.exist');\ncy.contains(/Editar despesa/i).should('exist');\n(0, _helperFunctions.editExpense)({\n  value: '200',\n  currency: 'CAD',\n  method: 'Dinheiro',\n  tag: 'Saúde',\n  description: 'Duzentos dólares canadenses'\n});\nconst expectedTableRow = ['Duzentos dólares canadenses', 'Saúde', 'Dinheiro', '200.00', 'Dólar Canadense/Real Brasileiro', '3.76', '751.18', 'Real'];\nconst deleteBtn = 1;\ncy.get('tbody tr').first().find('td').should('have.length', expectedTableRow.length + deleteBtn);\ncy.wrap(expectedTableRow).each(expectedValue => {\n  cy.get('tbody tr').first().find('td').contains(expectedValue);\n});\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '776.81');\nconst expectedExpenses = [{\n  id: 0,\n  value: '200',\n  currency: 'CAD',\n  method: 'Dinheiro',\n  tag: 'Saúde',\n  description: 'Duzentos dólares canadenses',\n  exchangeRates: _data.mockData\n}, _objectSpread(_objectSpread({}, _constants.initialExpenses[1]), {}, {\n  id: 1,\n  exchangeRates: _data.mockData\n})];\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', expectedExpenses);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"edit-btn\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"edit-btn\"]`, but never found it.\n    at Context.eval (webpack:///./cypress/support/commands.js:27:62)",
                "diff": null
              },
              "uuid": "801d6dfb-70be-418f-8d4f-6e5c62663aa2",
              "parentUUID": "f9bea74f-0068-4faa-81d9-b2dd94ce336e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e2e051af-63ca-4128-b6f8-ee848e274690",
            "801d6dfb-70be-418f-8d4f-6e5c62663aa2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 24962,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b882b2bd-4f6d-441e-9b2c-a2e39fce572b",
          "title": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cobertura de \"Statements\" total deverá ser maior ou igual a 90.",
              "fullTitle": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação Cobertura de \"Statements\" total deverá ser maior ou igual a 90.",
              "timedOut": null,
              "duration": 112,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.statements.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 90",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 90\n    at Context.eval (webpack:///./cypress/e2e/_requirements/10.TestCoverage.cy.js:5:80)",
                "diff": null
              },
              "uuid": "4fd3ef22-4e71-49ac-8ac6-279fb16ffa93",
              "parentUUID": "b882b2bd-4f6d-441e-9b2c-a2e39fce572b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Functions\" total deverá ser maior ou igual a 90.",
              "fullTitle": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação Cobertura de \"Functions\" total deverá ser maior ou igual a 90.",
              "timedOut": null,
              "duration": 97,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.functions.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 90",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 90\n    at Context.eval (webpack:///./cypress/e2e/_requirements/10.TestCoverage.cy.js:9:79)",
                "diff": null
              },
              "uuid": "b4b06f07-92a8-4068-990a-1432e006227f",
              "parentUUID": "b882b2bd-4f6d-441e-9b2c-a2e39fce572b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Branches\" total deverá ser maior ou igual a 90.",
              "fullTitle": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação Cobertura de \"Branches\" total deverá ser maior ou igual a 90.",
              "timedOut": null,
              "duration": 104,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.branches.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 90",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 90\n    at Context.eval (webpack:///./cypress/e2e/_requirements/10.TestCoverage.cy.js:13:78)",
                "diff": null
              },
              "uuid": "2115ada5-4311-4301-945b-5b07f5a7936e",
              "parentUUID": "b882b2bd-4f6d-441e-9b2c-a2e39fce572b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Lines\" total deverá ser maior ou igual a 90.",
              "fullTitle": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação Cobertura de \"Lines\" total deverá ser maior ou igual a 90.",
              "timedOut": null,
              "duration": 109,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.lines.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 90",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 0 to be at least 90\n    at Context.eval (webpack:///./cypress/e2e/_requirements/10.TestCoverage.cy.js:17:75)",
                "diff": null
              },
              "uuid": "e43e7020-cfc9-4a0b-b6d3-24fd41f0854f",
              "parentUUID": "b882b2bd-4f6d-441e-9b2c-a2e39fce572b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4fd3ef22-4e71-49ac-8ac6-279fb16ffa93",
            "b4b06f07-92a8-4068-990a-1432e006227f",
            "2115ada5-4311-4301-945b-5b07f5a7936e",
            "e43e7020-cfc9-4a0b-b6d3-24fd41f0854f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}