{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 0,
    "pending": 0,
    "failures": 4,
    "start": "2023-04-11T23:11:53.854Z",
    "end": "2023-04-11T23:12:01.164Z",
    "duration": 7310,
    "testsRegistered": 4,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9c2d4a75-9ca2-4846-bab7-c3e36eccf5ad",
      "title": "",
      "fullFile": "cypress/e2e/_requirements/04.SaveExpensesForm.cy.js",
      "file": "cypress/e2e/_requirements/04.SaveExpensesForm.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1c55c1d6-dbef-4ee3-8a71-9ee37b309a73",
          "title": "4 - Salve todas as informações do formulário no estado global",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adiciona uma despesa e verifica se a soma de despesas do header foi atualizada e os inputs voltaram ao valor inicial",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona uma despesa e verifica se a soma de despesas do header foi atualizada e os inputs voltaram ao valor inicial",
              "timedOut": null,
              "duration": 1798,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\n(0, _helperFunctions.addExpense)(expense);\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '52.28');\ncy.getByTestId(_constants.VALUE_INPUT_TEST_ID).should('have.value', '');\ncy.getByTestId(_constants.DESCRIPTION_INPUT_TEST_ID).should('have.value', '');",
              "err": {
                "message": "TypeError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > this.createCurrencies is not a function\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "TypeError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > this.createCurrencies is not a function\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n    at WalletForm.handleClick (http://localhost:3000/static/js/bundle.js:259:40)\n    at HTMLUnknownElement.callCallback (http://localhost:3000/static/js/bundle.js:14637:18)\n    at Object.invokeGuardedCallbackDev (http://localhost:3000/static/js/bundle.js:14681:20)\n    at invokeGuardedCallback (http://localhost:3000/static/js/bundle.js:14738:35)\n    at invokeGuardedCallbackAndCatchFirstError (http://localhost:3000/static/js/bundle.js:14752:29)\n    at executeDispatch (http://localhost:3000/static/js/bundle.js:18896:7)\n    at processDispatchQueueItemsInOrder (http://localhost:3000/static/js/bundle.js:18922:11)\n    at processDispatchQueue (http://localhost:3000/static/js/bundle.js:18933:9)\n    at dispatchEventsForPlugins (http://localhost:3000/static/js/bundle.js:18942:7)\n    at <unknown> (http://localhost:3000/static/js/bundle.js:19102:16)",
                "diff": null
              },
              "uuid": "f4db9c7d-ee4d-4372-9a93-466725c661ad",
              "parentUUID": "1c55c1d6-dbef-4ee3-8a71-9ee37b309a73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adiciona uma despesa e verifica se a despesa foi salva no estado global",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona uma despesa e verifica se a despesa foi salva no estado global",
              "timedOut": null,
              "duration": 1437,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\n(0, _helperFunctions.addExpense)(expense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [_objectSpread(_objectSpread({}, expense), {}, {\n  id: 0,\n  exchangeRates: _data.mockData\n})]);",
              "err": {
                "message": "TypeError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > this.createCurrencies is not a function\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "TypeError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > this.createCurrencies is not a function\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n    at WalletForm.handleClick (http://localhost:3000/static/js/bundle.js:259:40)\n    at HTMLUnknownElement.callCallback (http://localhost:3000/static/js/bundle.js:14637:18)\n    at Object.invokeGuardedCallbackDev (http://localhost:3000/static/js/bundle.js:14681:20)\n    at invokeGuardedCallback (http://localhost:3000/static/js/bundle.js:14738:35)\n    at invokeGuardedCallbackAndCatchFirstError (http://localhost:3000/static/js/bundle.js:14752:29)\n    at executeDispatch (http://localhost:3000/static/js/bundle.js:18896:7)\n    at processDispatchQueueItemsInOrder (http://localhost:3000/static/js/bundle.js:18922:11)\n    at processDispatchQueue (http://localhost:3000/static/js/bundle.js:18933:9)\n    at dispatchEventsForPlugins (http://localhost:3000/static/js/bundle.js:18942:7)\n    at <unknown> (http://localhost:3000/static/js/bundle.js:19102:16)",
                "diff": null
              },
              "uuid": "f570d5e2-de29-49f7-a4b1-659de44833c4",
              "parentUUID": "1c55c1d6-dbef-4ee3-8a71-9ee37b309a73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a API é chamada a cada vez que o botão 'Adicionar despesa' é clicado",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Verifica se a API é chamada a cada vez que o botão 'Adicionar despesa' é clicado",
              "timedOut": null,
              "duration": 1559,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\ncy.get('@mockFetch').should('be.calledOnce');\n(0, _helperFunctions.addExpense)(expense);\ncy.get('@mockFetch').should('be.calledTwice');\n(0, _helperFunctions.addExpense)(expense);\ncy.get('@mockFetch').should('be.calledThrice');",
              "err": {
                "message": "TypeError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > this.createCurrencies is not a function\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "TypeError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > this.createCurrencies is not a function\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n    at WalletForm.handleClick (http://localhost:3000/static/js/bundle.js:259:40)\n    at HTMLUnknownElement.callCallback (http://localhost:3000/static/js/bundle.js:14637:18)\n    at Object.invokeGuardedCallbackDev (http://localhost:3000/static/js/bundle.js:14681:20)\n    at invokeGuardedCallback (http://localhost:3000/static/js/bundle.js:14738:35)\n    at invokeGuardedCallbackAndCatchFirstError (http://localhost:3000/static/js/bundle.js:14752:29)\n    at executeDispatch (http://localhost:3000/static/js/bundle.js:18896:7)\n    at processDispatchQueueItemsInOrder (http://localhost:3000/static/js/bundle.js:18922:11)\n    at processDispatchQueue (http://localhost:3000/static/js/bundle.js:18933:9)\n    at dispatchEventsForPlugins (http://localhost:3000/static/js/bundle.js:18942:7)\n    at <unknown> (http://localhost:3000/static/js/bundle.js:19102:16)",
                "diff": null
              },
              "uuid": "f6839651-39ba-4064-92db-6ac9fd84c264",
              "parentUUID": "1c55c1d6-dbef-4ee3-8a71-9ee37b309a73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adiciona duas despesas e verifica se o estado global e header foram atualizados",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona duas despesas e verifica se o estado global e header foram atualizados",
              "timedOut": null,
              "duration": 1423,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const firstExpense = {\n  id: 0,\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares',\n  exchangeRates: _data.mockData\n};\n(0, _helperFunctions.addExpense)(firstExpense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [firstExpense]);\nconst secondExpense = {\n  id: 1,\n  value: '20',\n  currency: 'EUR',\n  method: 'Cartão de débito',\n  tag: 'Trabalho',\n  description: 'Vinte euros',\n  exchangeRates: _data.mockData\n};\n(0, _helperFunctions.addExpense)(secondExpense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [firstExpense, secondExpense]);\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '154.82');",
              "err": {
                "message": "TypeError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > this.createCurrencies is not a function\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "TypeError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > this.createCurrencies is not a function\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n    at WalletForm.handleClick (http://localhost:3000/static/js/bundle.js:259:40)\n    at HTMLUnknownElement.callCallback (http://localhost:3000/static/js/bundle.js:14637:18)\n    at Object.invokeGuardedCallbackDev (http://localhost:3000/static/js/bundle.js:14681:20)\n    at invokeGuardedCallback (http://localhost:3000/static/js/bundle.js:14738:35)\n    at invokeGuardedCallbackAndCatchFirstError (http://localhost:3000/static/js/bundle.js:14752:29)\n    at executeDispatch (http://localhost:3000/static/js/bundle.js:18896:7)\n    at processDispatchQueueItemsInOrder (http://localhost:3000/static/js/bundle.js:18922:11)\n    at processDispatchQueue (http://localhost:3000/static/js/bundle.js:18933:9)\n    at dispatchEventsForPlugins (http://localhost:3000/static/js/bundle.js:18942:7)\n    at <unknown> (http://localhost:3000/static/js/bundle.js:19102:16)",
                "diff": null
              },
              "uuid": "5b78ceef-d833-42a1-b811-91fd699b440f",
              "parentUUID": "1c55c1d6-dbef-4ee3-8a71-9ee37b309a73",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f4db9c7d-ee4d-4372-9a93-466725c661ad",
            "f570d5e2-de29-49f7-a4b1-659de44833c4",
            "f6839651-39ba-4064-92db-6ac9fd84c264",
            "5b78ceef-d833-42a1-b811-91fd699b440f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6217,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}